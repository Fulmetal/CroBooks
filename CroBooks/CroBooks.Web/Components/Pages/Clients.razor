@page "/clients"

@using CroBooks.Shared.Dto
@using CroBooks.Web.Components.Clients
@using CroBooks.Web.Enumeration

@inherits AppComponentBase
@implements IDisposable

<PageHeading>@Localize("Clients_Title")</PageHeading>

<MudButton OnClick="@AddClientClick">@LocalizeElement("ButtonAddNew")</MudButton>

<ClientList ClientDtoList="_clients" ></ClientList>

@code {
    [Inject] public HttpInterceptorService Interceptor { get; set; } = null!;
    [Inject] public ClientHttpClient HttpClient { get; set; } = null!;
    [Inject] public IDialogService DialogService { get; set; } = null!;

    private List<ClientDto> _clients = [];

    protected override async Task OnInitializedAsync()
    {
        Interceptor.RegisterEvent();

        await GetClientData();
    }

    public void Dispose()
    {
        Interceptor.DisposeEvent();
    }

    private async Task GetClientData()
    {
        _clients = await HttpClient.GetClients();
    }

    private async Task AddClientClick()
    {
        var options = new DialogOptions() { BackdropClick = false, CloseOnEscapeKey = true, CloseButton = true};
        var parameters = new DialogParameters<ClientDialog>
        {
            { x => x.EditorMode, EditorMode.Create }
        };
        var dialog = await DialogService.ShowAsync<ClientDialog>("Create client", parameters, options);
        
        var result = await dialog.Result;

        if (result != null && !result.Canceled)
        {
            await GetClientData();
        }
    }
}
