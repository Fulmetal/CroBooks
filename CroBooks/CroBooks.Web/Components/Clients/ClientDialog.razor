@using CroBooks.Shared.Dto
@using CroBooks.Web.Enumeration
@using System.ComponentModel.DataAnnotations

@inherits AppComponentBase

<MudDialog>
    
    <TitleContent>
        @Localize("Client")
    </TitleContent>
    <DialogContent>
        <ClientForm @ref="_clientForm" Client="Client"></ClientForm>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Error" OnClick="Cancel">Cancel</MudButton>
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" OnClick="OnSubmit">@LocalizeElement("ButtonSave")</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = null!;

    [Parameter]
    public ClientDto Client { get; set; } = new();
    [Parameter]
    public EditorMode EditorMode { get; set; } = EditorMode.View;

    [Inject] public ClientHttpClient ClientHttpClient { get; set; } = null!;
    [Inject] public ISnackbar Snackbar { get; set; } = null!;

    private ClientForm _clientForm = null!;
    
    private void Cancel()
    {
        MudDialog.Cancel();
    }   

    private async Task OnSubmit()
    {
        if (!_clientForm.Validate())
            return;
        
        switch (EditorMode)
        {
            case EditorMode.Create:
            {
                var result = await ClientHttpClient.AddClient(Client);
                break;
            }
            case EditorMode.Edit:
            {
                var result = await ClientHttpClient.UpdateClient(Client);
                break;
            }
            case EditorMode.Delete:
                await ClientHttpClient.DeleteClient(Client);
                break;
            case EditorMode.View:
            default:
                break;
        }

        StateHasChanged();

        Snackbar.Add("Server Deleted", Severity.Success);
        MudDialog.Close(DialogResult.Ok(string.Empty));
    }
}
