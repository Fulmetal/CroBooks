@rendermode InteractiveServer

<MudSelect Placeholder="Select culture" @bind-Value="Culture" FullWidth="false" ToStringFunc="@_convertFunc" OpenIcon="@Icons.Material.Filled.Language" AdornmentColor="Color.Tertiary">
    @foreach (var culture in _cultures)
    {
        <MudSelectItem Value="@(CultureInfo.GetCultureInfo(culture.Key))" />
    }
</MudSelect>


@code {
    [Inject] public NavigationManager NavigationManager { get; set; } = null!;
    [Inject] public IConfiguration Configuration { get; set; } = null!;

    private Dictionary<string, string?> _cultures = new();

    protected override void OnInitialized()
    {
        var cultureSection = Configuration.GetSection("Cultures");
        if (!string.IsNullOrEmpty(cultureSection.Value))
        {
            _cultures = cultureSection.GetChildren().ToDictionary(x => x.Key, x => x.Value);
        }

        
        Culture = CultureInfo.CurrentCulture;

        StateHasChanged();
    }

    private Func<CultureInfo, string?> _convertFunc = ci => ci?.NativeName;

    private CultureInfo Culture
    {
        get => CultureInfo.CurrentCulture;
        set
        {
            if (!CultureInfo.CurrentCulture.Equals(value))
            {
                var uri = new Uri(NavigationManager.Uri).GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
                var cultureEscapted = Uri.EscapeDataString(value.Name);
                var uriEscaped = Uri.EscapeDataString(uri);

                NavigationManager.NavigateTo($"Culture/set?culture={cultureEscapted}&returnUrl={uriEscaped}", forceLoad: true);
            }
        }
    }
}
